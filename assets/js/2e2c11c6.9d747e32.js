"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7414],{3905:(e,n,i)=>{i.d(n,{Zo:()=>u,kt:()=>d});var t=i(7294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var p=t.createContext({}),o=function(e){var n=t.useContext(p),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},u=function(e){var n=o(e.components);return t.createElement(p.Provider,{value:n},e.children)},v="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),v=o(i),c=r,d=v["".concat(p,".").concat(c)]||v[c]||f[c]||s;return i?t.createElement(d,a(a({ref:n},u),{},{components:i})):t.createElement(d,a({ref:n},u))}));function d(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=i.length,a=new Array(s);a[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[v]="string"==typeof e?e:r,a[1]=l;for(var o=2;o<s;o++)a[o]=i[o];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}c.displayName="MDXCreateElement"},3388:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var t=i(7462),r=(i(7294),i(3905));const s={},a=void 0,l={unversionedId:"API/String/is.ipv4",id:"API/String/is.ipv4",title:"is.ipv4",description:"is.ipv4(target: unknown)",source:"@site/docs/API/String/is.ipv4.md",sourceDirName:"API/String",slug:"/API/String/is.ipv4",permalink:"/thiis/docs/next/API/String/is.ipv4",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/API/String/is.ipv4.md",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"is.char",permalink:"/thiis/docs/next/API/String/is.char"},next:{title:"is.ipv6",permalink:"/thiis/docs/next/API/String/is.ipv6"}},p={},o=[{value:"is.ipv4(target: unknown)",id:"isipv4target-unknown",level:3},{value:"Specification",id:"specification",level:3},{value:"Information",id:"information",level:3},{value:"Examples",id:"examples",level:3},{value:"Reversal boolean result",id:"reversal-boolean-result",level:4}],u={toc:o},v="wrapper";function f(e){let{components:n,...i}=e;return(0,r.kt)(v,(0,t.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"isipv4target-unknown"},"is.ipv4(target: unknown)"),(0,r.kt)("h3",{id:"specification"},"Specification"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Target argument: ",(0,r.kt)("strong",{parentName:"li"},"required"),"."),(0,r.kt)("li",{parentName:"ul"},'Checks if the given "',(0,r.kt)("strong",{parentName:"li"},"target"),'" type is ipv4.')),(0,r.kt)("h3",{id:"information"},"Information"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Unit tests: \u2705")),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"is.ipv4('192.168.1.1'); // true\nis.ipv4('255.255.255.0'); // true\nis.ipv4('10.0.0.1'); // true\nis.ipv4('172.16.0.1'); // true\n\nis.ipv4(`a`); // false\nis.ipv4(\"r\"); // false\nis.ipv4('t'); // false\nis.ipv4(`3`); // false\nis.ipv4(`1`); // false\nis.ipv4(`2`); // false\nis.ipv4('hello'); // false\nis.ipv4('hello123'); // false\nis.ipv4('helloWorld'); // false\nis.ipv4('a1B2c3d4e5f6g'); // false\nis.ipv4('a1B2c3d4e5f6'); // false\nis.ipv4('inCamelCase'); // false\nis.ipv4('undefined'); // false\nis.ipv4('null'); // false\nis.ipv4(BigInt(1)) // false\nis.ipv4(0) // false\nis.ipv4(1) // false\nis.ipv4(-1) // false\nis.ipv4(Symbol()) // false\nis.ipv4(null) // false\nis.ipv4(true) // false\nis.ipv4([]) // false\nis.ipv4(false) // false\nis.ipv4(\"\") // false\nis.ipv4('') // false\nis.ipv4(``) // false\nis.ipv4({}) // false\nis.ipv4(undefined) // false\nis.ipv4(Function) // false\nis.ipv4(() => {}) // false\nis.ipv4(BigInt) // false\nis.ipv4(Symbol) // false\nis.ipv4(NaN) // false\nis.ipv4(Infinity) // false\nis.ipv4(-Infinity) // false\nis.ipv4(Number.POSITIVE_INFINITY) // false\nis.ipv4(Number.NEGATIVE_INFINITY) // false\n// And all other known types will return false\n")),(0,r.kt)("h4",{id:"reversal-boolean-result"},"Reversal boolean result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"is.ipv4('192.168.1.1'); // false\nis.ipv4('255.255.255.0'); // false\nis.ipv4('10.0.0.1'); // false\nis.ipv4('172.16.0.1'); // false\n\nis.ipv4(`a`); // true\nis.ipv4(\"r\"); // true\nis.ipv4('t'); // true\nis.ipv4(`3`); // true\nis.ipv4(`1`); // true\nis.ipv4(`2`); // true\nis.not.ipv4('hello'); // true\nis.not.ipv4('hello123'); // true\nis.not.ipv4('helloWorld'); // true\nis.not.ipv4('a1B2c3d4e5f6g'); // true\nis.not.ipv4('a1B2c3d4e5f6'); // true\nis.not.ipv4('inCamelCase'); // true\nis.not.ipv4('undefined'); // true\nis.not.ipv4('null'); // true\nis.not.ipv4(BigInt(1)) // true\nis.not.ipv4(0) // true\nis.not.ipv4(1) // true\nis.not.ipv4(-1) // true\nis.not.ipv4(Symbol()) // true\nis.not.ipv4(null) // true\nis.not.ipv4(true) // true\nis.not.ipv4([]) // true\nis.not.ipv4(false) // true\nis.not.ipv4(\"\") // true\nis.not.ipv4('') // true\nis.not.ipv4(``) // true\nis.not.ipv4({}) // true\nis.not.ipv4(undefined) // true\nis.not.ipv4(Function) // true\nis.not.ipv4(() => {}) // true\nis.not.ipv4(BigInt) // true\nis.not.ipv4(Symbol) // true\nis.not.ipv4(NaN) // true\nis.not.ipv4(Infinity) // true\nis.not.ipv4(-Infinity) // true\nis.not.ipv4(Number.POSITIVE_INFINITY) // true\nis.not.ipv4(Number.NEGATIVE_INFINITY) // true\n// And all other known types will return true\n")))}f.isMDXComponent=!0}}]);