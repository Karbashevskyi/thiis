"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[95181],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var r=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),l=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=l(t.components);return r.createElement(s.Provider,{value:e},t.children)},h="mdxType",y={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,c=u(t,["components","mdxType","originalType","parentName"]),h=l(n),p=o,d=h["".concat(s,".").concat(p)]||h[p]||y[p]||a;return n?r.createElement(d,i(i({ref:e},c),{},{components:n})):r.createElement(d,i({ref:e},c))}));function d(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=p;var u={};for(var s in e)hasOwnProperty.call(e,s)&&(u[s]=e[s]);u.originalType=t,u[h]="string"==typeof t?t:o,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},17669:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,u={unversionedId:"API/Boolean/is.truthy",id:"API/Boolean/is.truthy",title:"is.truthy",description:"is.truthy(target: unknown)",source:"@site/docs/API/Boolean/is.truthy.md",sourceDirName:"API/Boolean",slug:"/API/Boolean/is.truthy",permalink:"/thiis/docs/next/API/Boolean/is.truthy",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/API/Boolean/is.truthy.md",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"is.true",permalink:"/thiis/docs/next/API/Boolean/is.true"},next:{title:"is.browser",permalink:"/thiis/docs/next/API/Browser/is.browser"}},s={},l=[{value:"is.truthy(target: unknown)",id:"istruthytarget-unknown",level:2},{value:"Specification",id:"specification",level:3},{value:"Information",id:"information",level:3},{value:"Examples",id:"examples",level:3},{value:"Reversal boolean result",id:"reversal-boolean-result",level:4}],c={toc:l},h="wrapper";function y(t){let{components:e,...n}=t;return(0,o.kt)(h,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"istruthytarget-unknown"},"is.truthy(target: unknown)"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"is.truthy")," method is a utility function in JavaScript that checks whether a value is truthy or not. A truthy value is any value that is considered to be ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," when encountered in a Boolean context. This includes not only the true Boolean value, but also values like non-empty strings, numbers other than 0, and objects."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"is.truthy")," method returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if the value passed to it is truthy, and ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," otherwise. It can be useful in many situations where you need to check whether a value is valid or not, or when you need to ensure that a certain condition is met before proceeding with a particular piece of code."),(0,o.kt)("p",null,"Overall, the ",(0,o.kt)("inlineCode",{parentName:"p"},"is.truthy")," method is a handy tool to have in your JavaScript toolbox, and can help you write more robust and reliable code."),(0,o.kt)("h3",{id:"specification"},"Specification"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Target argument: ",(0,o.kt)("strong",{parentName:"li"},"required"),"."),(0,o.kt)("li",{parentName:"ul"},'Checks if the given "',(0,o.kt)("strong",{parentName:"li"},"target"),'" type is true.')),(0,o.kt)("h3",{id:"information"},"Information"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Unit tests: \u2705")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"is.truthy([]) // true\nis.truthy('undefined') // true\nis.truthy('null') // true\nis.truthy(Symbol()) // true\nis.truthy(true) // true\nis.truthy(BigInt(1)) // true\nis.truthy({}) // true\nis.truthy(Function) // true\nis.truthy(() => {}) // true\nis.truthy(Bigint) // true\nis.truthy(Symbol) // true\nis.truthy(new Boolean(1)) // true\nis.truthy(new Boolean(-1)) // true\n\nis.truthy(false) // false\nis.truthy(new Boolean(0)) // false\nis.truthy(new Boolean()) // false\nis.truthy(0) // false\nis.truthy('') // false\nis.truthy({}) // false\nis.truthy([]) // false\n// And all other known types will return false\n")),(0,o.kt)("h4",{id:"reversal-boolean-result"},"Reversal boolean result"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"is.not_truthy([]) // false\nis.not_truthy('undefined') // false\nis.not_truthy('null') // false\nis.not_truthy(Symbol()) // false\nis.not_truthy(true) // false\nis.not_truthy(BigInt(1)) // false\nis.not_truthy({}) // false\nis.not_truthy(Function) // false\nis.not_truthy(() => {}) // false\nis.not_truthy(Bigint) // false\nis.not_truthy(Symbol) // false\nis.not_truthy(new Boolean(1)) // false\nis.not_truthy(new Boolean(-1)) // false\n\nis.not_truthy(false) // true\nis.not_truthy(new Boolean(0)) // true\nis.not_truthy(new Boolean()) // true\nis.not_truthy(0) // true\nis.not_truthy('') // true\nis.not_truthy({}) // true\nis.not_truthy([]) // true\n// And all other known types will return true\n")))}y.isMDXComponent=!0}}]);