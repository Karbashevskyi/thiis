"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3879],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>d});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),o=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},u=function(e){var r=o(e.components);return t.createElement(l.Provider,{value:r},e.children)},h="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),h=o(n),p=a,d=h["".concat(l,".").concat(p)]||h[p]||f[p]||i;return n?t.createElement(d,s(s({ref:r},u),{},{components:n})):t.createElement(d,s({ref:r},u))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[h]="string"==typeof e?e:a,s[1]=c;for(var o=2;o<i;o++)s[o]=n[o];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1328:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var t=n(7462),a=(n(7294),n(3905));const i={},s=void 0,c={unversionedId:"API/String/is.char",id:"version-1.0.2/API/String/is.char",title:"is.char",description:"is.char(target: unknown)",source:"@site/versioned_docs/version-1.0.2/API/String/is.char.md",sourceDirName:"API/String",slug:"/API/String/is.char",permalink:"/thiis/docs/API/String/is.char",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0.2/API/String/is.char.md",tags:[],version:"1.0.2",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"is.camelCase",permalink:"/thiis/docs/API/String/is.camelCase"},next:{title:"is.ipv4",permalink:"/thiis/docs/API/String/is.ipv4"}},l={},o=[{value:"is.char(target: unknown)",id:"ischartarget-unknown",level:3},{value:"Specification",id:"specification",level:3},{value:"Information",id:"information",level:3},{value:"Examples",id:"examples",level:3},{value:"Reversal boolean result",id:"reversal-boolean-result",level:4}],u={toc:o},h="wrapper";function f(e){let{components:r,...n}=e;return(0,a.kt)(h,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"ischartarget-unknown"},"is.char(target: unknown)"),(0,a.kt)("h3",{id:"specification"},"Specification"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Target argument: ",(0,a.kt)("strong",{parentName:"li"},"required"),"."),(0,a.kt)("li",{parentName:"ul"},'Checks if the given "',(0,a.kt)("strong",{parentName:"li"},"target"),'" type is char.')),(0,a.kt)("h3",{id:"information"},"Information"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Unit tests: \u2705")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"is.char(`a`); // true\nis.char(\"r\"); // true\nis.char('t'); // true\nis.char(`3`); // true\nis.char(`1`); // true\nis.char(`2`); // true\n\nis.char('hello'); // false\nis.char('hello123'); // false\nis.char('helloWorld'); // false\nis.char('a1B2c3d4e5f6g'); // false\nis.char('a1B2c3d4e5f6'); // false\nis.char('inCamelCase'); // false\nis.char('undefined'); // false\nis.char('null'); // false\nis.char(BigInt(1)) // false\nis.char(0) // false\nis.char(1) // false\nis.char(-1) // false\nis.char(Symbol()) // false\nis.char(null) // false\nis.char(true) // false\nis.char([]) // false\nis.char(false) // false\nis.char(\"\") // false\nis.char('') // false\nis.char(``) // false\nis.char({}) // false\nis.char(undefined) // false\nis.char(Function) // false\nis.char(() => {}) // false\nis.char(BigInt) // false\nis.char(Symbol) // false\nis.char(NaN) // false\nis.char(Infinity) // false\nis.char(-Infinity) // false\nis.char(Number.POSITIVE_INFINITY) // false\nis.char(Number.NEGATIVE_INFINITY) // false\n// And all other known types will return false\n")),(0,a.kt)("h4",{id:"reversal-boolean-result"},"Reversal boolean result"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"is.char(`a`); // false\nis.char(\"r\"); // false\nis.char('t'); // false\nis.char(`3`); // false\nis.char(`1`); // false\nis.char(`2`); // false\n\nis.not.char('hello'); // true\nis.not.char('hello123'); // true\nis.not.char('helloWorld'); // true\nis.not.char('a1B2c3d4e5f6g'); // true\nis.not.char('a1B2c3d4e5f6'); // true\nis.not.char('inCamelCase'); // true\nis.not.char('undefined'); // true\nis.not.char('null'); // true\nis.not.char(BigInt(1)) // true\nis.not.char(0) // true\nis.not.char(1) // true\nis.not.char(-1) // true\nis.not.char(Symbol()) // true\nis.not.char(null) // true\nis.not.char(true) // true\nis.not.char([]) // true\nis.not.char(false) // true\nis.not.char(\"\") // true\nis.not.char('') // true\nis.not.char(``) // true\nis.not.char({}) // true\nis.not.char(undefined) // true\nis.not.char(Function) // true\nis.not.char(() => {}) // true\nis.not.char(BigInt) // true\nis.not.char(Symbol) // true\nis.not.char(NaN) // true\nis.not.char(Infinity) // true\nis.not.char(-Infinity) // true\nis.not.char(Number.POSITIVE_INFINITY) // true\nis.not.char(Number.NEGATIVE_INFINITY) // true\n// And all other known types will return true\n")))}f.isMDXComponent=!0}}]);