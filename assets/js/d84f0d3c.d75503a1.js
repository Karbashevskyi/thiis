"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[217],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>C});var t=n(7294);function s(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){s(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,s=function(e,a){if(null==e)return{};var n,t,s={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=t.createContext({}),c=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},u=function(e){var a=c(e.components);return t.createElement(o.Provider,{value:a},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,s=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),p=s,C=m["".concat(o,".").concat(p)]||m[p]||f[p]||l;return n?t.createElement(C,r(r({ref:a},u),{},{components:n})):t.createElement(C,r({ref:a},u))}));function C(e,a){var n=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var l=n.length,r=new Array(l);r[0]=p;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[m]="string"==typeof e?e:s,r[1]=i;for(var c=2;c<l;c++)r[c]=n[c];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1186:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var t=n(7462),s=(n(7294),n(3905));const l={},r=void 0,i={unversionedId:"API/String/is.camelCase",id:"version-1.0.2/API/String/is.camelCase",title:"is.camelCase",description:"is.camelCase(target: unknown)",source:"@site/versioned_docs/version-1.0.2/API/String/is.camelCase.md",sourceDirName:"API/String",slug:"/API/String/is.camelCase",permalink:"/thiis/docs/API/String/is.camelCase",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0.2/API/String/is.camelCase.md",tags:[],version:"1.0.2",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"is.zero",permalink:"/thiis/docs/API/Number/is.zero"},next:{title:"is.char",permalink:"/thiis/docs/API/String/is.char"}},o={},c=[{value:"is.camelCase(target: unknown)",id:"iscamelcasetarget-unknown",level:3},{value:"Specification",id:"specification",level:3},{value:"Information",id:"information",level:3},{value:"Examples",id:"examples",level:3},{value:"Reversal boolean result",id:"reversal-boolean-result",level:4}],u={toc:c},m="wrapper";function f(e){let{components:a,...n}=e;return(0,s.kt)(m,(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"iscamelcasetarget-unknown"},"is.camelCase(target: unknown)"),(0,s.kt)("h3",{id:"specification"},"Specification"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Target argument: ",(0,s.kt)("strong",{parentName:"li"},"required"),"."),(0,s.kt)("li",{parentName:"ul"},'Checks if the given "',(0,s.kt)("strong",{parentName:"li"},"target"),'" type is camelCase.')),(0,s.kt)("h3",{id:"information"},"Information"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Unit tests: \u2705")),(0,s.kt)("h3",{id:"examples"},"Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"is.camelCase('hello'); // true\nis.camelCase('hello123'); // true\nis.camelCase('helloWorld'); // true\nis.camelCase('a1B2c3d4e5f6g'); // true\nis.camelCase('a1B2c3d4e5f6'); // true\nis.camelCase('inCamelCase'); // true\nis.camelCase('undefined'); // true\nis.camelCase('null'); // true\n\nis.camelCase(BigInt(1)) // false\nis.camelCase(0) // false\nis.camelCase(1) // false\nis.camelCase(-1) // false\nis.camelCase(Symbol()) // false\nis.camelCase(null) // false\nis.camelCase(true) // false\nis.camelCase([]) // false\nis.camelCase(false) // false\nis.camelCase(\"\") // false\nis.camelCase('') // false\nis.camelCase(``) // false\nis.camelCase({}) // false\nis.camelCase(undefined) // false\nis.camelCase(Function) // false\nis.camelCase(() => {}) // false\nis.camelCase(BigInt) // false\nis.camelCase(Symbol) // false\nis.camelCase(NaN) // false\nis.camelCase(Infinity) // false\nis.camelCase(-Infinity) // false\nis.camelCase(Number.POSITIVE_INFINITY) // false\nis.camelCase(Number.NEGATIVE_INFINITY) // false\n// And all other known types will return false\n")),(0,s.kt)("h4",{id:"reversal-boolean-result"},"Reversal boolean result"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"is.not.camelCase('hello'); // false\nis.not.camelCase('hello123'); // false\nis.not.camelCase('helloWorld'); // false\nis.not.camelCase('a1B2c3d4e5f6g'); // false\nis.not.camelCase('a1B2c3d4e5f6'); // false\nis.not.camelCase('inCamelCase'); // false\nis.not.camelCase('undefined'); // false\nis.not.camelCase('null'); // false\n\nis.not.camelCase(BigInt(1)) // true\nis.not.camelCase(0) // true\nis.not.camelCase(1) // true\nis.not.camelCase(-1) // true\nis.not.camelCase(Symbol()) // true\nis.not.camelCase(null) // true\nis.not.camelCase(true) // true\nis.not.camelCase([]) // true\nis.not.camelCase(false) // true\nis.not.camelCase(\"\") // true\nis.not.camelCase('') // true\nis.not.camelCase(``) // true\nis.not.camelCase({}) // true\nis.not.camelCase(undefined) // true\nis.not.camelCase(Function) // true\nis.not.camelCase(() => {}) // true\nis.not.camelCase(BigInt) // true\nis.not.camelCase(Symbol) // true\nis.not.camelCase(NaN) // true\nis.not.camelCase(Infinity) // true\nis.not.camelCase(-Infinity) // true\nis.not.camelCase(Number.POSITIVE_INFINITY) // true\nis.not.camelCase(Number.NEGATIVE_INFINITY) // true\n// And all other known types will return true\n")))}f.isMDXComponent=!0}}]);