"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1023],{3905:(n,e,t)=>{t.d(e,{Zo:()=>b,kt:()=>f});var i=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},s=Object.keys(n);for(i=0;i<s.length;i++)t=s[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(i=0;i<s.length;i++)t=s[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var u=i.createContext({}),l=function(n){var e=i.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},b=function(n){var e=l(n.components);return i.createElement(u.Provider,{value:e},n.children)},g="mdxType",I={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},c=i.forwardRef((function(n,e){var t=n.components,r=n.mdxType,s=n.originalType,u=n.parentName,b=a(n,["components","mdxType","originalType","parentName"]),g=l(t),c=r,f=g["".concat(u,".").concat(c)]||g[c]||I[c]||s;return t?i.createElement(f,o(o({ref:e},b),{},{components:t})):i.createElement(f,o({ref:e},b))}));function f(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var s=t.length,o=new Array(s);o[0]=c;var a={};for(var u in e)hasOwnProperty.call(e,u)&&(a[u]=e[u]);a.originalType=n,a[g]="string"==typeof n?n:r,o[1]=a;for(var l=2;l<s;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7558:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>I,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=t(7462),r=(t(7294),t(3905));const s={},o=void 0,a={unversionedId:"API/Number/is.bigInt",id:"version-1.0.1/API/Number/is.bigInt",title:"is.bigInt",description:"is.bigInt(target: unknown)",source:"@site/versioned_docs/version-1.0.1/API/Number/is.bigInt.md",sourceDirName:"API/Number",slug:"/API/Number/is.bigInt",permalink:"/thiis/docs/API/Number/is.bigInt",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0.1/API/Number/is.bigInt.md",tags:[],version:"1.0.1",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"is.windowsPhone",permalink:"/thiis/docs/API/Hardware/is.windowsPhone"},next:{title:"is.even",permalink:"/thiis/docs/API/Number/is.even"}},u={},l=[{value:"is.bigInt(target: unknown)",id:"isbiginttarget-unknown",level:3}],b={toc:l},g="wrapper";function I(n){let{components:e,...t}=n;return(0,r.kt)(g,(0,i.Z)({},b,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"isbiginttarget-unknown"},"is.bigInt(target: unknown)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Target argument: ",(0,r.kt)("strong",{parentName:"li"},"required"),"."),(0,r.kt)("li",{parentName:"ul"},'Checks if the given "',(0,r.kt)("strong",{parentName:"li"},"target"),'" type is BigInt.')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"is.bigInt(BigInt(1)) // true\n\nis.bigInt(0) // false\nis.bigInt(1) // false\nis.bigInt(-1) // false\nis.bigInt('undefined') // false\nis.bigInt('null') // false\nis.bigInt(Symbol()) // false\nis.bigInt(null) // false\nis.bigInt(true) // false\nis.bigInt([]) // false\nis.bigInt(false) // false\nis.bigInt(\"\") // false\nis.bigInt('') // false\nis.bigInt(``) // false\nis.bigInt({}) // false\nis.bigInt(undefined) // false\nis.bigInt(Function) // false\nis.bigInt(() => {}) // false\nis.bigInt(BigInt) // false\nis.bigInt(Symbol) // false\nis.bigInt(NaN) // false\nis.bigInt(Infinity) // false\nis.bigInt(-Infinity) // false\nis.bigInt(Number.POSITIVE_INFINITY) // false\nis.bigInt(Number.NEGATIVE_INFINITY) // false\n// And all other known types will return false\n\n// Reversal boolean result\n\nis.not.bigInt(BigInt(1)) // false\n\nis.not.bigInt(0) // true\nis.not.bigInt(1) // true\nis.not.bigInt(-1) // true\nis.not.bigInt('undefined') // true\nis.not.bigInt('null') // true\nis.not.bigInt(Symbol()) // true\nis.not.bigInt(null) // true\nis.not.bigInt(true) // true\nis.not.bigInt([]) // true\nis.not.bigInt(false) // true\nis.not.bigInt(\"\") // true\nis.not.bigInt('') // true\nis.not.bigInt(``) // true\nis.not.bigInt({}) // true\nis.not.bigInt(undefined) // true\nis.not.bigInt(Function) // true\nis.not.bigInt(() => {}) // true\nis.not.bigInt(BigInt) // true\nis.not.bigInt(Symbol) // true\nis.not.bigInt(NaN) // true\nis.not.bigInt(Infinity) // true\nis.not.bigInt(-Infinity) // true\nis.not.bigInt(Number.POSITIVE_INFINITY) // true\nis.not.bigInt(Number.NEGATIVE_INFINITY) // true\n// And all other known types will return true\n")))}I.isMDXComponent=!0}}]);